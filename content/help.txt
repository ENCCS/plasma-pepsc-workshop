.. code-block:: cfg

  --io.diagnostic_write_interval arg (=4294967295)                             Write diagnostic output every arg time steps
  --io.system_write_t_interval arg                                             Save the simulation every arg simulated seconds. Negative values disable writes.
                                                                               [Define for all groups.]
  --io.system_write_file_name arg                                              Save the simulation to this file name series. [Define for all groups.]
  --io.system_write_path arg                                                   Save this series in this location. Default is ./ [Define for all groups or 
                                                                               none.]
  --io.system_write_distribution_stride arg                                    Every this many cells write out their velocity space. 0 is none. [Define for all
                                                                               groups.]
  --io.system_write_distribution_xline_stride arg                              Every this many lines of cells along the x direction write out their velocity 
                                                                               space. 0 is none. [Define for all groups.]
  --io.system_write_distribution_yline_stride arg                              Every this many lines of cells along the y direction write out their velocity 
                                                                               space. 0 is none. [Define for all groups.]
  --io.system_write_distribution_zline_stride arg                              Every this many lines of cells along the z direction write out their velocity 
                                                                               space. 0 is none. [Define for all groups.]
  --io.system_write_distribution_shell_radius arg                              At cells intersecting spheres with those radii centred at the origin write out 
                                                                               their velocity space. 0 is none.
  --io.system_write_distribution_shell_stride arg                              Every this many cells for those on selected shells write out their velocity 
                                                                               space. 0 is none.
  --io.system_write_fsgrid_variables arg                                       If 0 don't write fsgrid DROs, if 1 do write them.
  --io.system_write_mpiio_hint_key arg                                         MPI-IO hint key passed to the non-restart IO. Has to be matched by 
                                                                               io.system_write_mpiio_hint_value.
  --io.system_write_mpiio_hint_value arg                                       MPI-IO hint value passed to the non-restart IO. Has to be matched by 
                                                                               io.system_write_mpiio_hint_key.
  --io.restart_write_mpiio_hint_key arg                                        MPI-IO hint key passed to the restart IO. Has to be matched by 
                                                                               io.restart_write_mpiio_hint_value.
  --io.restart_write_mpiio_hint_value arg                                      MPI-IO hint value passed to the restart IO. Has to be matched by 
                                                                               io.restart_write_mpiio_hint_key.
  --io.restart_read_mpiio_hint_key arg                                         MPI-IO hint key passed to the restart IO. Has to be matched by 
                                                                               io.restart_read_mpiio_hint_value.
  --io.restart_read_mpiio_hint_value arg                                       MPI-IO hint value passed to the restart IO. Has to be matched by 
                                                                               io.restart_read_mpiio_hint_key.
  --io.write_initial_state arg (=0)                                            Write initial state, not even the 0.5 dt propagation is done. Do not use for 
                                                                               restarting. 
  --io.write_full_bgb_data arg (=0)                                            Write a dedicated file containing all BGB components and first derivatives, then
                                                                               exit.
  --io.restart_walltime_interval arg (=-1)                                     Save the complete simulation in given walltime intervals. Negative values 
                                                                               disable writes.
  --io.number_of_restarts arg (=4294967295)                                    Exit the simulation after certain number of walltime-based restarts.
  --io.vlsv_buffer_size arg (=0)                                               Buffer size passed to VLSV writer (bytes, up to uint64_t), default 0 as this is 
                                                                               sensible on sisu
  --io.write_restart_stripe_factor arg (=0)                                    Stripe factor for restart and initial grid writing. Default 0 to inherit.
  --io.write_system_stripe_factor arg (=0)                                     Stripe factor for bulk file writing. Default 0 to inherit.
  --io.write_as_float arg (=0)                                                 If true, write in floats instead of doubles
  --io.restart_write_path arg (=./)                                            Path to the location where restart files should be written. Defaults to the 
                                                                               local directory, also if the specified destination is not writeable.
  --propagate_field arg (=1)                                                   Propagate magnetic field during the simulation
  --propagate_vlasov_acceleration arg (=1)                                     Propagate distribution functions during the simulation in velocity space. If 
                                                                               false, it is propagated with zero length timesteps.
  --propagate_vlasov_translation arg (=1)                                      Propagate distribution functions during the simulation in ordinary space. If 
                                                                               false, it is propagated with zero length timesteps.
  --dynamic_timestep arg (=1)                                                  If true,  timestep is set based on  CFL limits (default on)
  --hallMinimumRho arg (=1)                                                    Minimum rho value used for the Hall and electron pressure gradient terms in the 
                                                                               Lorentz force and in the field solver. Default is very low and has no effect in 
                                                                               practice.
  --project arg                                                                Specify the name of the project to use. Supported to date (20150610): Alfven 
                                                                               Diffusion Dispersion Distributions Firehose Flowthrough Fluctuations Harris KHB 
                                                                               Larmor Magnetosphere Multipeak Riemann1 Shock Shocktest Template test_fp 
                                                                               testHall test_trans VelocityBox verificationLarmor
  --restart.write_as_float arg (=0)                                            If true, write restart fields in floats instead of doubles
  --restart.filename arg                                                       Restart from this vlsv file. No restart if empty file.
  --restart.overrideReadFsGridDecompositionX arg (=0)                          Manual FsGridDecomposition for field solver grid stored in a restart file.
  --restart.overrideReadFsGridDecompositionY arg (=0)                          Manual FsGridDecomposition for field solver grid stored in a restart file.
  --restart.overrideReadFsGridDecompositionZ arg (=0)                          Manual FsGridDecomposition for field solver grid stored in a restart file.
  --gridbuilder.geometry arg (=XYZ6D)                                          Simulation geometry XY4D,XZ4D,XY5D,XZ5D,XYZ6D
  --gridbuilder.x_min arg (=nan)                                               Minimum value of the x-coordinate.
  --gridbuilder.x_max arg (=nan)                                               Minimum value of the x-coordinate.
  --gridbuilder.y_min arg (=nan)                                               Minimum value of the y-coordinate.
  --gridbuilder.y_max arg (=nan)                                               Minimum value of the y-coordinate.
  --gridbuilder.z_min arg (=nan)                                               Minimum value of the z-coordinate.
  --gridbuilder.z_max arg (=nan)                                               Minimum value of the z-coordinate.
  --gridbuilder.x_length arg (=0)                                              Number of cells in x-direction in initial grid.
  --gridbuilder.y_length arg (=0)                                              Number of cells in y-direction in initial grid.
  --gridbuilder.z_length arg (=0)                                              Number of cells in z-direction in initial grid.
  --gridbuilder.dt arg (=0)                                                    Initial timestep in seconds.
  --gridbuilder.t_max arg (=1e+20)                                             Maximum simulation time, in seconds. If timestep_max limit is hit first this 
                                                                               time will never be reached
  --gridbuilder.timestep_max arg (=4294967295)                                 Max. value for timesteps. If t_max limit is hit first, this step will never be 
                                                                               reached
  --fieldsolver.maxWaveVelocity arg (=1e+20)                                   Maximum wave velocity allowed in the fastest velocity determination in m/s, 
                                                                               default unlimited
  --fieldsolver.maxSubcycles arg (=1)                                          Maximum allowed field solver subcycles
  --fieldsolver.resistivity arg (=0)                                           Resistivity for the eta*J term in Ohm's law.
  --fieldsolver.diffusiveEterms arg (=1)                                       Enable diffusive terms in the computation of E
  --fieldsolver.ohmHallTerm arg (=0)                                           Enable/choose spatial order of the Hall term in Ohm's law. 0: off, 1: 1st 
                                                                               spatial order, 2: 2nd spatial order
  --fieldsolver.ohmGradPeTerm arg (=0)                                         Enable/choose spatial order of the electron pressure gradient term in Ohm's law.
                                                                               0: off, 1: 1st spatial order.
  --fieldsolver.electronTemperature arg (=0)                                   Upstream electron temperature to be used for the electron pressure gradient term
                                                                               (K).
  --fieldsolver.electronDensity arg (=0)                                       Upstream electron density to be used for the electron pressure gradient term 
                                                                               (m^-3).
  --fieldsolver.electronPTindex arg (=0)                                       Polytropic index for electron pressure gradient term. 0 is isobaric, 1 is 
                                                                               isothermal, 1.667 is adiabatic electrons, 
  --fieldsolver.maxCFL arg (=0.5)                                              The maximum CFL limit for field propagation. Used to set timestep if 
                                                                               dynamic_timestep is true.
  --fieldsolver.minCFL arg (=0.4)                                              The minimum CFL limit for field propagation. Used to set timestep if 
                                                                               dynamic_timestep is true.
  --fieldsolver.manualFsGridDecompositionX arg (=0)                            Manual FsGridDecomposition for field solver grid.
  --fieldsolver.manualFsGridDecompositionY arg (=0)                            Manual FsGridDecomposition for field solver grid.
  --fieldsolver.manualFsGridDecompositionZ arg (=0)                            Manual FsGridDecomposition for field solver grid.
  --vlasovsolver.maxSlAccelerationRotation arg (=25)                           Maximum rotation angle (degrees) allowed by the Semi-Lagrangian solver (Use >25 
                                                                               values with care)
  --vlasovsolver.maxSlAccelerationSubcycles arg (=1)                           Maximum number of subcycles for acceleration
  --vlasovsolver.maxCFL arg (=0.99)                                            The maximum CFL limit for vlasov propagation in ordinary space. Used to set 
                                                                               timestep if dynamic_timestep is true.
  --vlasovsolver.minCFL arg (=0.8)                                             The minimum CFL limit for vlasov propagation in ordinary space. Used to set 
                                                                               timestep if dynamic_timestep is true.
  --vlasovsolver.accelerateMaxwellianBoundaries arg (=0)                       Propagate maxwellian boundary cell contents in velocity space. Default false.
  --loadBalance.algorithm arg (=RCB)                                           Load balancing algorithm to be used
  --loadBalance.tolerance arg (=1.05)                                          Load imbalance tolerance
  --loadBalance.rebalanceInterval arg (=10)                                    Load rebalance interval (steps)
  --loadBalance.optionKey arg                                                  Zoltan option key. Has to be matched by loadBalance.optionValue.
  --loadBalance.optionValue arg                                                Zoltan option value. Has to be matched by loadBalance.optionKey.
  --io.system_write_all_data_reducers arg (=0)                                 If 0 don't write all DROs, if 1 do write them.
  --variables.output arg                                                       List of data reduction operators (DROs) to add to the grid file output.  Each 
                                                                               variable to be added has to be on a new line output = XXX. Names are case 
                                                                               insensitive.  Available (20230628): fg_b fg_b_background fg_b_perturbed 
                                                                               fg_b_background_vol fg_derivs_b_background fg_e vg_rhom vg_rhoq 
                                                                               populations_vg_rho fg_rhom fg_rhoq vg_v fg_v populations_vg_v 
                                                                               populations_vg_moments_thermal populations_vg_moments_nonthermal 
                                                                               populations_vg_effectivesparsitythreshold populations_vg_rho_loss_adjust 
                                                                               populations_vg_energydensity populations_vg_precipitationdifferentialflux 
                                                                               populations_vg_heatflux populations_vg_nonmaxwellianity vg_maxdt_acceleration 
                                                                               vg_maxdt_translation populations_vg_maxdt_acceleration 
                                                                               populations_vg_maxdt_translation fg_maxdt_fieldsolver vg_rank fg_rank 
                                                                               fg_amr_level vg_loadbalance_weight vg_boundarytype fg_boundarytype 
                                                                               vg_boundarylayer fg_boundarylayer populations_vg_blocks vg_f_saved 
                                                                               populations_vg_acceleration_subcycles vg_e_vol fg_e_vol fg_e_hall vg_e_gradpe 
                                                                               fg_b_vol vg_b_vol vg_b_background_vol vg_b_perturbed_vol vg_pressure fg_pressure
                                                                               populations_vg_ptensor vg_b_vol_derivatives fg_derivs ig_fac ig_latitude ig_chi0
                                                                               ig_cellarea ig_upmappedarea ig_sigmap ig_sigmah ig_sigmaparallel ig_rhon 
                                                                               ig_electrontemp ig_solverinternals ig_upmappednodecoords ig_upmappedb 
                                                                               ig_openclosed ig_potential ig_precipitation ig_deltaphi ig_inplanecurrent ig_b 
                                                                               ig_e vg_drift vg_ionospherecoupling vg_connection vg_fluxrope fg_curvature 
                                                                               vg_amr_drho vg_amr_du vg_amr_dpsq vg_amr_dbsq vg_amr_db vg_amr_alpha 
                                                                               vg_amr_reflevel vg_amr_jperb vg_amr_translate_comm vg_gridcoordinates 
                                                                               fg_gridcoordinates 
  --variables_deprecated.output arg                                            List of deprecated names for data reduction operators (DROs). Names are case 
                                                                               insensitive. Available (20190521): B BackgroundB fg_BackgroundB PerturbedB 
                                                                               fg_PerturbedB E Rhom Rhoq populations_Rho V populations_V 
                                                                               populations_moments_Backstream populations_moments_NonBackstream 
                                                                               populations_moments_thermal populations_moments_nonthermal populations_minvalue 
                                                                               populations_EffectiveSparsityThreshold populations_RhoLossAdjust 
                                                                               populations_rho_loss_adjustpopulations_EnergyDensity 
                                                                               populations_PrecipitationFlux populations_precipitationdifferentialfluxLBweight 
                                                                               vg_lbweight vg_loadbalanceweight MaxVdt MaxRdt populations_MaxVdt 
                                                                               populations_MaxRdt populations_maxdt_acceleration populations_maxdt_translation 
                                                                               MaxFieldsdt fg_maxfieldsdtMPIrank FsGridRank FsGridBoundaryType BoundaryType 
                                                                               FsGridBoundaryLayer BoundaryLayer populations_Blocks fSaved 
                                                                               vg_fsavedpopulations_accSubcycles populations_acceleration_subcyclesVolE vg_VolE
                                                                               Evol E_vol fg_VolE fg_Evol HallE fg_HallE GradPeE e_gradpe VolB vg_VolB fg_VolB 
                                                                               B_vol Bvol vg_Bvol fg_volB fg_Bvol BackgroundVolB PerturbedVolB Pressure 
                                                                               vg_Pressure fg_Pressure populations_PTensor BVOLderivs b_vol_derivs
  --io.diagnostic_write_all_data_reducers arg (=0)                             Write all available diagnostic reducers
  --variables.diagnostic arg                                                   List of data reduction operators (DROs) to add to the diagnostic runtime output.
                                                                               Each variable to be added has to be on a new line diagnostic = XXX. Names are 
                                                                               case insensitive. Available (20221221): populations_vg_blocks vg_rhom 
                                                                               populations_vg_rho_loss_adjust vg_loadbalance_weight vg_maxdt_acceleration 
                                                                               vg_maxdt_translation fg_maxdt_fieldsolver populations_vg_maxdt_acceleration 
                                                                               populations_vg_maxdt_translation populations_vg_maxdistributionfunction 
                                                                               populations_vg_mindistributionfunction
  --variables_deprecated.diagnostic arg                                        List of deprecated data reduction operators (DROs) to add to the diagnostic 
                                                                               runtime output. Names are case insensitive. Available (20201111): rhom 
                                                                               populations_rholossadjust populations_rho_loss_adjust populations_blocks 
                                                                               lbweight loadbalance_weight vg_lbweight vg_loadbalanceweight maxvdt 
                                                                               maxdt_acceleration maxrdt maxdt_translation populations_maxvdt 
                                                                               populations_maxrdt populations_maxdt_acceleration populations_maxdt_translation 
                                                                               populations_maxdistributionfunction populations_mindistributionfunction 
                                                                               maxfieldsdt maxdt_fieldsolver fg_maxfieldsdt
  --bailout.write_restart arg (=1)                                             If 1, write a restart file on bailout. Gets reset when sending a STOP (1) or a 
                                                                               KILL (0).
  --bailout.min_dt arg (=1e-06)                                                Minimum time step below which bailout occurs (s).
  --bailout.max_memory arg (=1073741824)                                       Maximum amount of memory used per node (in GiB) over which bailout occurs.
  --bailout.velocity_space_wall_block_margin arg (=1)                          Distance from the velocity space limits in blocks, if the distribution function 
                                                                               reaches that distance from the wall we bail out to avoid hitting the wall.
  --VAMR.vel_refinement_criterion arg                                          Name of the velocity refinement criterion
  --VAMR.max_velocity_level arg (=0)                                           Maximum velocity mesh refinement level
  --VAMR.refine_limit arg (=1)                                                 If the refinement criterion function returns a larger value than this, block is 
                                                                               refined
  --VAMR.coarsen_limit arg (=0.5)                                              If the refinement criterion function returns a smaller value than this, block 
                                                                               can be coarsened
  --AMR.max_spatial_level arg (=0)                                             Maximum absolute spatial mesh refinement level
  --AMR.max_allowed_spatial_level arg (=-1)                                    Maximum currently allowed spatial mesh refinement level
  --AMR.should_refine arg (=1)                                                 If false, do not refine Vlasov grid regardless of max spatial level
  --AMR.adapt_refinement arg (=0)                                              If true, re-refine vlasov grid every refine_cadence balance
  --AMR.refine_on_restart arg (=0)                                             If true, re-refine vlasov grid on restart. DEPRECATED, consider using the DOMR 
                                                                               command
  --AMR.force_refinement arg (=0)                                              If true, refine/unrefine the vlasov grid to match the config on restart
  --AMR.should_filter arg (=0)                                                 If true, filter vlasov grid with boxcar filter on restart
  --AMR.use_alpha1 arg (=1)                                                    Use the maximum of dimensionless gradients alpha_1 as a refinement index
  --AMR.alpha1_refine_threshold arg (=0.5)                                     Determines the minimum value of alpha_1 to refine cells
  --AMR.alpha1_coarsen_threshold arg (=-1)                                     Determines the maximum value of alpha_1 to unrefine cells, default half of the 
                                                                               refine threshold
  --AMR.use_alpha2 arg (=1)                                                    Use J/B_perp as a refinement index
  --AMR.alpha2_refine_threshold arg (=0.5)                                     Determines the minimum value of alpha_2 to refine cells
  --AMR.alpha2_coarsen_threshold arg (=-1)                                     Determines the maximum value of alpha_2 to unrefine cells, default half of the 
                                                                               refine threshold
  --AMR.refine_cadence arg (=5)                                                Refine every nth load balance
  --AMR.refine_after arg (=0)                                                  Start refinement after this many simulation seconds
  --AMR.refine_radius arg (=1e+20)                                             Maximum distance from Earth to refine
  --AMR.alpha1_drho_weight arg (=1)                                            Multiplier for delta rho in alpha calculation
  --AMR.alpha1_du_weight arg (=1)                                              Multiplier for delta U in alpha calculation
  --AMR.alpha1_dpsq_weight arg (=1)                                            Multiplier for delta p squared in alpha calculation
  --AMR.alpha1_dbsq_weight arg (=1)                                            Multiplier for delta B squared in alpha calculation
  --AMR.alpha1_db_weight arg (=1)                                              Multiplier for delta B in alpha calculation
  --AMR.number_of_boxes arg (=0)                                               How many boxes to be refined, that number of centers and sizes have to then be 
                                                                               defined as well.
  --AMR.box_half_width_x arg                                                   Half width in x of the box that is refined
  --AMR.box_half_width_y arg                                                   Half width in y of the box that is refined
  --AMR.box_half_width_z arg                                                   Half width in z of the box that is refined
  --AMR.box_center_x arg                                                       x coordinate of the center of the box that is refined
  --AMR.box_center_y arg                                                       y coordinate of the center of the box that is refined
  --AMR.box_center_z arg                                                       z coordinate of the center of the box that is refined
  --AMR.box_max_level arg                                                      max refinement level of the box that is refined
  --AMR.transShortPencils arg (=0)                                             if true, use one-cell pencils
  --AMR.filterpasses arg                                                       AMR filter passes for each individual refinement level
  --fieldtracing.fieldLineTracer arg (=Euler)                                  Field line tracing method to use for coupling ionosphere and magnetosphere 
                                                                               (options are: Euler, BS)
  --fieldtracing.tracer_max_allowed_error arg (=1000)                          Maximum allowed error for the adaptive field line tracers 
  --fieldtracing.tracer_max_attempts arg (=100)                                Maximum allowed attempts for the adaptive field line tracers
  --fieldtracing.tracer_min_dx arg (=100000)                                   Minimum allowed field line tracer step length for the adaptive field line 
                                                                               tracers (m)
  --fieldtracing.fullbox_and_fluxrope_max_absolute_distance_to_trace arg (=-1) Maximum absolute distance in m to trace along the field line before ending. 
                                                                               Defaults to the sum of the simulation box edge lengths LX+LY+LZ if set <= 0.
  --fieldtracing.fullbox_max_incomplete_cells arg (=0)                         Maximum fraction of cells left incomplete when stopping tracing loop for full 
                                                                               box tracing. Defaults to zero to process all, will be slow at scale! Both 
                                                                               fluxrope_max_incomplete_cells and fullbox_max_incomplete_cells will be achieved.
  --fieldtracing.fluxrope_max_incomplete_cells arg (=0)                        Maximum fraction of cells left incomplete when stopping loop for flux rope 
                                                                               tracing. Defaults to zero to process all, will be slow at scale! Both 
                                                                               fluxrope_max_incomplete_cells and fullbox_max_incomplete_cells will be achieved.
  --fieldtracing.use_reconstruction_cache arg (=0)                             Use the cache to store reconstruction coefficients. (0: don't, 1: use)
  --fieldtracing.fluxrope_max_curvature_radii_to_trace arg (=10)               Maximum number of seedpoint curvature radii to trace forward and backward from 
                                                                               each DCCRG cell to find flux ropes
  --fieldtracing.fluxrope_max_curvature_radii_extent arg (=2)                  Maximum extent in seedpoint curvature radii from the seed a field line is 
                                                                               allowed to extend to be counted as a flux rope
  --ParticlePopulations arg (=<population>)                                    Name of the simulated particle populations (string)
  --<population>_properties.charge arg (=1)                                    Particle charge, in units of elementary charges (int)
  --<population>_properties.mass_units arg (=PROTON)                           Units in which particle mass is given, either 'PROTON' or 'ELECTRON' (string)
  --<population>_properties.mass arg (=1)                                      Particle mass in given units (float)
  --<population>_sparse.minValue arg (=1e-15)                                  Minimum value of distribution function in any cell of a velocity block for the 
                                                                               block to be considered to have contents
  --<population>_sparse.blockAddWidthV arg (=1)                                Number of layers of blocks that are kept in velocity space around the blocks 
                                                                               with content
  --<population>_sparse.conserve_mass arg (=0)                                 If true, then mass is conserved by scaling the dist. func. in the remaining 
                                                                               blocks
  --<population>_sparse.dynamicAlgorithm arg (=0)                              Type of algorithm used for calculating the dynamic minValue; 0 = none, 1 = 
                                                                               linear algorithm based on rho, 2 = linear algorithm based on Blocks, (Example 
                                                                               linear algorithm: y = kx+b, where dynamicMinValue1=k*dynamicBulkValue1 + b, and 
                                                                               dynamicMinValue2 = k*dynamicBulkValue2 + b
  --<population>_sparse.dynamicMinValue1 arg (=1)                              The minimum value for the dynamic minValue
  --<population>_sparse.dynamicMinValue2 arg (=1)                              The maximum value (value 2) for the dynamic minValue
  --<population>_sparse.dynamicBulkValue1 arg (=0)                             Minimum value for the dynamic algorithm range, so for example if 
                                                                               dynamicAlgorithm=1 then for sparse.dynamicBulkValue1 = 1e3, 
                                                                               sparse.dynamicBulkValue2=1e5, we apply the algorithm to cells for which 
                                                                               1e3<cell.rho<1e5
  --<population>_sparse.dynamicBulkValue2 arg (=0)                             Maximum value for the dynamic algorithm range, so for example if 
                                                                               dynamicAlgorithm=1 then for sparse.dynamicBulkValue1 = 1e3, 
                                                                               sparse.dynamicBulkValue2=1e5, we apply the algorithm to cells for which 
                                                                               1e3<cell.rho<1e5
  --<population>_vspace.vx_min arg (=0)                                        Minimum value for velocity mesh vx-coordinates.
  --<population>_vspace.vx_max arg (=0)                                        Maximum value for velocity mesh vx-coordinates.
  --<population>_vspace.vy_min arg (=0)                                        Minimum value for velocity mesh vy-coordinates.
  --<population>_vspace.vy_max arg (=0)                                        Maximum value for velocity mesh vx-coordinates.
  --<population>_vspace.vz_min arg (=0)                                        Minimum value for velocity mesh vz-coordinates.
  --<population>_vspace.vz_max arg (=0)                                        Maximum value for velocity mesh vx-coordinates.
  --<population>_vspace.vx_length arg (=1)                                     Initial number of velocity blocks in vx-direction.
  --<population>_vspace.vy_length arg (=1)                                     Initial number of velocity blocks in vy-direction.
  --<population>_vspace.vz_length arg (=1)                                     Initial number of velocity blocks in vz-direction.
  --<population>_vspace.max_refinement_level arg (=1)                          Maximum allowed mesh refinement level.
  --<population>_thermal.vx arg (=-500000)                                     Center coordinate for the maxwellian distribution. Used for calculating the 
                                                                               suprathermal moments.
  --<population>_thermal.vy arg (=0)                                           Center coordinate for the maxwellian distribution. Used for calculating the 
                                                                               suprathermal moments.
  --<population>_thermal.vz arg (=0)                                           Center coordinate for the maxwellian distribution. Used for calculating the 
                                                                               suprathermal moments.
  --<population>_thermal.radius arg (=0)                                       Radius of the maxwellian distribution. Used for calculating the suprathermal 
                                                                               moments. If set to 0 (default), the thermal/suprathermal DROs are skipped.
  --<population>_precipitation.nChannels arg (=16)                             Number of energy channels for precipitation differential flux evaluation
  --<population>_precipitation.emin arg (=0.1)                                 Lowest energy channel (in eV) for precipitation differential flux evaluation
  --<population>_precipitation.emax arg (=100)                                 Highest energy channel (in eV) for precipitation differential flux evaluation
  --<population>_precipitation.lossConeAngle arg (=10)                         Fixed loss cone opening angle (in deg) for precipitation differential flux 
                                                                               evaluation
  --<population>_energydensity.limit1 arg (=5)                                 Lower limit of second bin for energy density, given in units of solar wind ram 
                                                                               energy.
  --<population>_energydensity.limit2 arg (=10)                                Lower limit of third bin for energy density, given in units of solar wind ram 
                                                                               energy.
  --<population>_energydensity.solarwindspeed arg (=0)                         Incoming solar wind velocity magnitude in m/s. Used for calculating energy 
                                                                               densities.
  --<population>_energydensity.solarwindenergy arg (=0)                        Incoming solar wind ram energy in eV. Used for calculating energy densities.
  --boundaries.boundary arg                                                    List of boundary condition (BC) types to be used. Each boundary condition to be 
                                                                               used has to be on a new line boundary = YYY. Available options are: Outflow, 
                                                                               Ionosphere, Copysphere, Maxwellian.
  --boundaries.periodic_x arg (=yes)                                           Set the grid periodicity in x-direction. 'yes'(default)/'no'.
  --boundaries.periodic_y arg (=yes)                                           Set the grid periodicity in y-direction. 'yes'(default)/'no'.
  --boundaries.periodic_z arg (=yes)                                           Set the grid periodicity in z-direction. 'yes'(default)/'no'.
  --ionosphere.centerX arg (=0)                                                X coordinate of ionosphere center (m)
  --ionosphere.centerY arg (=0)                                                Y coordinate of ionosphere center (m)
  --ionosphere.centerZ arg (=0)                                                Z coordinate of ionosphere center (m)
  --ionosphere.radius arg (=10000000)                                          Radius of the inner simulation boundary (unit is assumed to be R_E if value < 
                                                                               1000, otherwise m).
  --ionosphere.innerRadius arg (=6471200)                                      Radius of the ionosphere model (m).
  --ionosphere.geometry arg (=2)                                               Select the geometry of the ionosphere, 0: inf-norm (diamond), 1: 1-norm 
                                                                               (square), 2: 2-norm (circle, DEFAULT), 3: 2-norm cylinder aligned with y-axis, 
                                                                               use with polar plane/line dipole.
  --ionosphere.precedence arg (=2)                                             Precedence value of the ionosphere system boundary condition (integer), the 
                                                                               higher the stronger.
  --ionosphere.reapplyUponRestart arg (=0)                                     If 0 (default), keep going with the state existing in the restart file. If 1, 
                                                                               calls again applyInitialState. Can be used to change boundary condition 
                                                                               behaviour during a run.
  --ionosphere.baseShape arg (=sphericalFibonacci)                             Select the seed mesh geometry for the spherical ionosphere grid. Options are: 
                                                                               sphericalFibonacci, tetrahedron, icosahedron.
  --ionosphere.conductivityModel arg (=0)                                      Select ionosphere conductivity tensor construction model. Options are: 0=GUMICS 
                                                                               style (Vertical B, only SigmaH and SigmaP), 1=Ridley et al 2004 (1000 mho 
                                                                               longitudinal conductivity), 2=Koskinen 2011 full conductivity tensor.
  --ionosphere.ridleyParallelConductivity arg (=1000)                          Constant parallel conductivity value. 1000 mho is given without justification by
                                                                               Ridley et al 2004.
  --ionosphere.fibonacciNodeNum arg (=256)                                     Number of nodes in the spherical fibonacci mesh.
  --ionosphere.refineMinLatitude arg                                           Refine the grid polewards of the given latitude. Multiple of these lines can be 
                                                                               given for successive refinement, paired up with refineMaxLatitude lines.
  --ionosphere.refineMaxLatitude arg                                           Refine the grid equatorwards of the given latitude. Multiple of these lines can 
                                                                               be given for successive refinement, paired up with refineMinLatitude lines.
  --ionosphere.atmosphericModelFile arg (=NRLMSIS.dat)                         Filename to read the MSIS atmosphere data from (default: NRLMSIS.dat)
  --ionosphere.recombAlpha arg (=2.4e-13)                                      Ionospheric recombination parameter (m^3/s)
  --ionosphere.ionizationModel arg (=SergienkoIvanov)                          Ionospheric electron production rate model. Options are: Rees1963, Rees1989, 
                                                                               SergienkoIvanov (default).
  --ionosphere.innerBoundaryVDFmode arg (=FixedMoments)                        Inner boundary VDF construction method. Options ar: FixedMoments, 
                                                                               AverageMoments, AverageAllMoments, CopyAndLosscone, ForceL2EXB.
  --ionosphere.F10_7 arg (=100)                                                Solar 10.7 cm radio flux (sfu = 10^{-22} W/m^2)
  --ionosphere.backgroundIonisation arg (=0.5)                                 Background ionoisation due to cosmic rays (mho)
  --ionosphere.solverMaxIterations arg (=2000)                                 Maximum number of iterations for the conjugate gradient solver
  --ionosphere.solverRelativeL2ConvergenceThreshold arg (=1e-06)               Convergence threshold for the relative L2 metric
  --ionosphere.solverMaxFailureCount arg (=5)                                  Maximum number of iterations allowed to diverge before restarting the ionosphere
                                                                               solver
  --ionosphere.solverMaxErrorGrowthFactor arg (=100)                           Maximum allowed factor of growth with respect to the minimum error before 
                                                                               restarting the ionosphere solver
  --ionosphere.solverGaugeFixing arg (=equator)                                Gauge fixing method of the ionosphere solver. Options are: pole, integral, 
                                                                               equator
  --ionosphere.shieldingLatitude arg (=70)                                     Latitude below which the potential is set to zero in the equator gauge fixing 
                                                                               scheme (degree)
  --ionosphere.solverPreconditioning arg (=1)                                  Use preconditioning for the solver? (0/1)
  --ionosphere.solverUseMinimumResidualVariant arg (=0)                        Use minimum residual variant
  --ionosphere.solverToggleMinimumResidualVariant arg (=0)                     Toggle use of minimum residual variant at every solver restart
  --ionosphere.earthAngularVelocity arg (=7.2921159e-05)                       Angular velocity of inner boundary convection, in rad/s
  --ionosphere.plasmapauseL arg (=5)                                           L-shell at which the plasmapause resides (for corotation)
  --ionosphere.downmapRadius arg (=-1)                                         Radius from which FACs are coupled down into the ionosphere. Units are assumed 
                                                                               to be RE if value < 1000, otherwise m. If -1: use inner boundary cells.
  --ionosphere.unmappedNodeRho arg (=10000)                                    Electron density of ionosphere nodes that do not connect to the magnetosphere 
                                                                               domain.
  --ionosphere.unmappedNodeTe arg (=1000000)                                   Electron temperature of ionosphere nodes that do not connect to the 
                                                                               magnetosphere domain.
  --ionosphere.couplingTimescale arg (=1)                                      Magnetosphere->Ionosphere coupling timescale (seconds, 0=immediate coupling
  --ionosphere.couplingInterval arg (=0)                                       Time interval at which the ionosphere is solved (seconds)
  --<population>_ionosphere.rho arg (=0)                                       Number density of the ionosphere (m^-3)
  --<population>_ionosphere.T arg (=0)                                         Temperature of the ionosphere (K)
  --<population>_ionosphere.VX0 arg (=0)                                       Bulk velocity of ionospheric distribution function in X direction (m/s)
  --<population>_ionosphere.VY0 arg (=0)                                       Bulk velocity of ionospheric distribution function in X direction (m/s)
  --<population>_ionosphere.VZ0 arg (=0)                                       Bulk velocity of ionospheric distribution function in X direction (m/s)
  --copysphere.centerX arg (=0)                                                X coordinate of copysphere center (m)
  --copysphere.centerY arg (=0)                                                Y coordinate of copysphere center (m)
  --copysphere.centerZ arg (=0)                                                Z coordinate of copysphere center (m)
  --copysphere.radius arg (=10000000)                                          Radius of copysphere (m).
  --copysphere.geometry arg (=2)                                               Select the geometry of the copysphere, 0: inf-norm (diamond), 1: 1-norm 
                                                                               (square), 2: 2-norm (circle, DEFAULT), 3: 2-norm cylinder aligned with y-axis, 
                                                                               use with polar plane/line dipole.
  --copysphere.precedence arg (=2)                                             Precedence value of the copysphere system boundary condition (integer), the 
                                                                               higher the stronger.
  --copysphere.reapplyUponRestart arg (=0)                                     If 0 (default), keep going with the state existing in the restart file. If 1, 
                                                                               calls again applyInitialState. Can be used to change boundary condition 
                                                                               behaviour during a run.
  --copysphere.zeroPerB arg (=0)                                               If 0 (default), normal copysphere behaviour of magnetic field at inner boundary.
                                                                               If 1, keep magnetic field static at the inner boundary
  --<population>_copysphere.rho arg (=0)                                       Number density of the copysphere (m^-3)
  --<population>_copysphere.T arg (=0)                                         Temperature of the copysphere (K)
  --<population>_copysphere.VX0 arg (=0)                                       Bulk velocity of copyspheric distribution function in X direction (m/s)
  --<population>_copysphere.VY0 arg (=0)                                       Bulk velocity of copyspheric distribution function in X direction (m/s)
  --<population>_copysphere.VZ0 arg (=0)                                       Bulk velocity of copyspheric distribution function in X direction (m/s)
  --<population>_copysphere.fluffiness arg (=0)                                Inertia of boundary smoothing when copying neighbour's moments and velocity 
                                                                               distributions (0=completely constant boundaries, 1=neighbours are interpolated 
                                                                               immediately).
  --outflow.faceNoFields arg                                                   List of faces on which no field outflow boundary conditions are to be applied 
                                                                               ([xyz][+-]).
  --outflow.precedence arg (=4)                                                Precedence value of the outflow system boundary condition (integer), the higher 
                                                                               the stronger.
  --outflow.reapplyUponRestart arg (=0)                                        If 0 (default), keep going with the state existing in the restart file. If 1, 
                                                                               calls again applyInitialState. Can be used to change boundary condition 
                                                                               behaviour during a run.
  --<population>_outflow.reapplyFaceUponRestart arg                            List of faces on which outflow boundary conditions are to be reapplied upon 
                                                                               restart ([xyz][+-]).
  --<population>_outflow.face arg                                              List of faces on which outflow boundary conditions are to be applied 
                                                                               ([xyz][+-]).
  --<population>_outflow.vlasovScheme_face_x+ arg (=Copy)                      Scheme to use on the face x+ (Copy, Limit, None)
  --<population>_outflow.vlasovScheme_face_x- arg (=Copy)                      Scheme to use on the face x- (Copy, Limit, None)
  --<population>_outflow.vlasovScheme_face_y+ arg (=Copy)                      Scheme to use on the face y+ (Copy, Limit, None)
  --<population>_outflow.vlasovScheme_face_y- arg (=Copy)                      Scheme to use on the face y- (Copy, Limit, None)
  --<population>_outflow.vlasovScheme_face_z+ arg (=Copy)                      Scheme to use on the face z+ (Copy, Limit, None)
  --<population>_outflow.vlasovScheme_face_z- arg (=Copy)                      Scheme to use on the face z- (Copy, Limit, None)
  --<population>_outflow.quench arg (=1)                                       Factor by which to quench the inflowing parts of the velocity distribution 
                                                                               function.
  --maxwellian.face arg                                                        List of faces on which set Maxwellian boundary conditions are to be applied 
                                                                               ([xyz][+-]).
  --maxwellian.precedence arg (=3)                                             Precedence value of the set Maxwellian boundary condition (integer), the higher 
                                                                               the stronger.
  --maxwellian.reapplyUponRestart arg (=0)                                     If 0 (default), keep going with the state existing in the restart file. If 1, 
                                                                               calls again applyInitialState. Can be used to change boundary condition 
                                                                               behaviour during a run.
  --maxwellian.t_interval arg (=0)                                             Time interval in seconds for applying the varying inflow condition.
  --<population>_maxwellian.file_x+ arg                                        Input files for the set Maxwellian inflow parameters on face x+. Data format per
                                                                               line: time (s) density (p/m^3) Temperature (K) Vx Vy Vz (m/s) Bx By Bz (T).
  --<population>_maxwellian.file_x- arg                                        Input files for the set Maxwellian inflow parameters on face x-. Data format per
                                                                               line: time (s) density (p/m^3) Temperature (K) Vx Vy Vz (m/s) Bx By Bz (T).
  --<population>_maxwellian.file_y+ arg                                        Input files for the set Maxwellian inflow parameters on face y+. Data format per
                                                                               line: time (s) density (p/m^3) Temperature (K) Vx Vy Vz (m/s) Bx By Bz (T).
  --<population>_maxwellian.file_y- arg                                        Input files for the set Maxwellian inflow parameters on face y-. Data format per
                                                                               line: time (s) density (p/m^3) Temperature (K) Vx Vy Vz (m/s) Bx By Bz (T).
  --<population>_maxwellian.file_z+ arg                                        Input files for the set Maxwellian inflow parameters on face z+. Data format per
                                                                               line: time (s) density (p/m^3) Temperature (K) Vx Vy Vz (m/s) Bx By Bz (T).
  --<population>_maxwellian.file_z- arg                                        Input files for the set Maxwellian inflow parameters on face z-. Data format per
                                                                               line: time (s) density (p/m^3) Temperature (K) Vx Vy Vz (m/s) Bx By Bz (T).
  --<population>_maxwellian.dynamic arg (=0)                                   Boolean value, is the set Maxwellian inflow dynamic in time or not.
  --Alfven.B0 arg (=1e-10)                                                     Guiding field value (T)
  --Alfven.Bx_guiding arg (=1)                                                 Guiding field x component
  --Alfven.By_guiding arg (=0)                                                 Guiding field y component
  --Alfven.Bz_guiding arg (=0)                                                 Guiding field z component
  --Alfven.Wavelength arg (=100000)                                            Wavelength (m)
  --Alfven.A_mag arg (=0.1)                                                    Amplitude of the magnetic perturbation
  --<population>_Alfven.rho arg (=100000000)                                   Number density (m^-3)
  --<population>_Alfven.Temperature arg (=0.86456498092)                       Temperature (K)
  --<population>_Alfven.A_vel arg (=0.1)                                       Amplitude of the velocity perturbation
  --Diffusion.B0 arg (=1e-09)                                                  Background field value (T)
  --<population>_Diffusion.rho arg (=10000000)                                 Number density (m^-3)
  --<population>_Diffusion.Temperature arg (=2000000)                          Temperature (K)
  --<population>_Diffusion.Scale_x arg (=100000)                               Scale length in x (m)
  --<population>_Diffusion.Scale_y arg (=100000)                               Scale length in y (m)
  --Dispersion.B0 arg (=1e-09)                                                 Guide magnetic field strength (T)
  --Dispersion.magXPertAbsAmp arg (=1e-09)                                     Absolute amplitude of the magnetic perturbation along x (T)
  --Dispersion.magYPertAbsAmp arg (=1e-09)                                     Absolute amplitude of the magnetic perturbation along y (T)
  --Dispersion.magZPertAbsAmp arg (=1e-09)                                     Absolute amplitude of the magnetic perturbation along z (T)
  --Dispersion.maxwCutoff arg (=1e-12)                                         Cutoff for the maxwellian distribution
  --Dispersion.angleXY arg (=0.001)                                            Orientation of the guide magnetic field with respect to the x-axis in x-y plane 
                                                                               (rad)
  --Dispersion.angleXZ arg (=0.001)                                            Orientation of the guide magnetic field with respect to the x-axis in x-z plane 
                                                                               (rad)
  --<population>_Dispersion.VX0 arg (=0)                                       Bulk velocity (m/s)
  --<population>_Dispersion.VY0 arg (=0)                                       Bulk velocity (m/s)
  --<population>_Dispersion.VZ0 arg (=0)                                       Bulk velocity (m/s)
  --<population>_Dispersion.rho arg (=10000000)                                Number density (m^-3)
  --<population>_Dispersion.Temperature arg (=2000000)                         Temperature (K)
  --<population>_Dispersion.densityPertRelAmp arg (=0.1)                       Relative amplitude of the density perturbation
  --<population>_Dispersion.velocityPertAbsAmp arg (=1000000)                  Absolute amplitude of the velocity perturbation
  --Distributions.rho1 arg (=0)                                                Number density, first peak (m^-3)
  --Distributions.rho2 arg (=0)                                                Number density, second peak (m^-3)
  --Distributions.Tx1 arg (=0)                                                 Temperature, first peak (K)
  --Distributions.Tx2 arg (=0)                                                 Temperature, second peak (K)
  --Distributions.Ty1 arg (=0)                                                 Temperature, first peak (K)
  --Distributions.Ty2 arg (=0)                                                 Temperature, second peak (K)
  --Distributions.Tz1 arg (=0)                                                 Temperature, first peak (K)
  --Distributions.Tz2 arg (=0)                                                 Temperature, second peak (K)
  --Distributions.Vx1 arg (=0)                                                 Bulk velocity x component, first peak (m/s)
  --Distributions.Vx2 arg (=0)                                                 Bulk velocity x component, second peak (m/s)
  --Distributions.Vy1 arg (=0)                                                 Bulk velocity y component, first peak (m/s)
  --Distributions.Vy2 arg (=0)                                                 Bulk velocity y component, second peak (m/s)
  --Distributions.Vz1 arg (=0)                                                 Bulk velocity z component, first peak (m/s)
  --Distributions.Vz2 arg (=0)                                                 Bulk velocity z component, second peak (m/s)
  --Distributions.Bx arg (=0)                                                  Magnetic field x component (T)
  --Distributions.By arg (=0)                                                  Magnetic field y component (T)
  --Distributions.Bz arg (=0)                                                  Magnetic field z component (T)
  --Distributions.dBx arg (=0)                                                 Magnetic field x component cosine perturbation amplitude (T)
  --Distributions.dBy arg (=0)                                                 Magnetic field y component cosine perturbation amplitude (T)
  --Distributions.dBz arg (=0)                                                 Magnetic field z component cosine perturbation amplitude (T)
  --Distributions.magXPertAbsAmp arg (=1e-09)                                  Absolute amplitude of the random magnetic perturbation along x (T)
  --Distributions.magYPertAbsAmp arg (=1e-09)                                  Absolute amplitude of the random magnetic perturbation along y (T)
  --Distributions.magZPertAbsAmp arg (=1e-09)                                  Absolute amplitude of the random magnetic perturbation along z (T)
  --Distributions.rho1PertAbsAmp arg (=0.1)                                    Absolute amplitude of the density perturbation, first peak
  --Distributions.rho2PertAbsAmp arg (=0.1)                                    Absolute amplitude of the density perturbation, second peak
  --Distributions.lambda arg (=0)                                              B cosine perturbation wavelength (m)
  --Firehose.Bx arg (=0)                                                       Magnetic field x component (T)
  --Firehose.By arg (=0)                                                       Magnetic field y component (T)
  --Firehose.Bz arg (=0)                                                       Magnetic field z component (T)
  --Firehose.lambda arg (=0)                                                   Initial perturbation wavelength (m)
  --Firehose.amp arg (=0)                                                      Initial perturbation amplitude (m)
  --<population>_Firehose.rho1 arg (=0)                                        Number density, first peak (m^-3)
  --<population>_Firehose.rho2 arg (=0)                                        Number density, second peak (m^-3)
  --<population>_Firehose.Tx1 arg (=0)                                         Temperature x, first peak (K)
  --<population>_Firehose.Tx2 arg (=0)                                         Temperature x, second peak (K)
  --<population>_Firehose.Ty1 arg (=0)                                         Temperature y, first peak (K)
  --<population>_Firehose.Ty2 arg (=0)                                         Temperature y, second peak (K)
  --<population>_Firehose.Tz1 arg (=0)                                         Temperature z, first peak (K)
  --<population>_Firehose.Tz2 arg (=0)                                         Temperature z, second peak (K)
  --<population>_Firehose.Vx1 arg (=0)                                         Bulk velocity x component, first peak (m/s)
  --<population>_Firehose.Vx2 arg (=0)                                         Bulk velocity x component, second peak (m/s)
  --<population>_Firehose.Vy1 arg (=0)                                         Bulk velocity y component, first peak (m/s)
  --<population>_Firehose.Vy2 arg (=0)                                         Bulk velocity y component, second peak (m/s)
  --<population>_Firehose.Vz1 arg (=0)                                         Bulk velocity z component, first peak (m/s)
  --<population>_Firehose.Vz2 arg (=0)                                         Bulk velocity z component, second peak (m/s)
  --Flowthrough.emptyBox arg (=0)                                              Is the simulation domain empty initially?
  --Flowthrough.densityModel arg (=Maxwellian)                                 Plasma density model, 'Maxwellian' or 'SheetMaxwellian'
  --Flowthrough.densityWidth arg (=60000000)                                   Width of signal around origin
  --Flowthrough.Bx arg (=0)                                                    Magnetic field x component (T)
  --Flowthrough.By arg (=0)                                                    Magnetic field y component (T)
  --Flowthrough.Bz arg (=0)                                                    Magnetic field z component (T)
  --<population>_Flowthrough.rho arg (=0)                                      Number density (m^-3)
  --<population>_Flowthrough.rhoBase arg (=0)                                  Background number density (m^-3)
  --<population>_Flowthrough.T arg (=0)                                        Temperature (K)
  --<population>_Flowthrough.VX0 arg (=0)                                      Initial bulk velocity in x-direction
  --<population>_Flowthrough.VY0 arg (=0)                                      Initial bulk velocity in y-direction
  --<population>_Flowthrough.VZ0 arg (=0)                                      Initial bulk velocity in z-direction
  --Fluctuations.BX0 arg (=1e-09)                                              Background field value (T)
  --Fluctuations.BY0 arg (=2e-09)                                              Background field value (T)
  --Fluctuations.BZ0 arg (=3e-09)                                              Background field value (T)
  --Fluctuations.magXPertAbsAmp arg (=1e-09)                                   Amplitude of the magnetic perturbation along x
  --Fluctuations.magYPertAbsAmp arg (=1e-09)                                   Amplitude of the magnetic perturbation along y
  --Fluctuations.magZPertAbsAmp arg (=1e-09)                                   Amplitude of the magnetic perturbation along z
  --<population>_Fluctuations.rho arg (=10000000)                              Number density (m^-3)
  --<population>_Fluctuations.Temperature arg (=2000000)                       Temperature (K)
  --<population>_Fluctuations.densityPertRelAmp arg (=0.1)                     Amplitude factor of the density perturbation
  --<population>_Fluctuations.velocityPertAbsAmp arg (=1000000)                Amplitude of the velocity perturbation
  --<population>_Fluctuations.maxwCutoff arg (=1e-12)                          Cutoff for the maxwellian distribution
  --Harris.Scale_size arg (=150000)                                            Harris sheet scale size (m)
  --Harris.BX0 arg (=8.33061003094e-08)                                        Magnetic field at infinity (T)
  --Harris.BY0 arg (=8.33061003094e-08)                                        Magnetic field at infinity (T)
  --Harris.BZ0 arg (=8.33061003094e-08)                                        Magnetic field at infinity (T)
  --<population>_Harris.Temperature arg (=2000000)                             Temperature (K)
  --<population>_Harris.rho arg (=10000000)                                    Number density at infinity (m^-3)
  --KHB.rho1 arg (=0)                                                          Number density, this->TOP state (m^-3)
  --KHB.rho2 arg (=0)                                                          Number density, this->BOTTOM state (m^-3)
  --KHB.T1 arg (=0)                                                            Temperature, this->TOP state (K)
  --KHB.T2 arg (=0)                                                            Temperature, this->BOTTOM state (K)
  --KHB.Vx1 arg (=0)                                                           Bulk velocity x component, this->TOP state (m/s)
  --KHB.Vx2 arg (=0)                                                           Bulk velocity x component, this->BOTTOM state (m/s)
  --KHB.Vy1 arg (=0)                                                           Bulk velocity y component, this->TOP state (m/s)
  --KHB.Vy2 arg (=0)                                                           Bulk velocity y component, this->BOTTOM state (m/s)
  --KHB.Vz1 arg (=0)                                                           Bulk velocity z component, this->TOP state (m/s)
  --KHB.Vz2 arg (=0)                                                           Bulk velocity z component, this->BOTTOM state (m/s)
  --KHB.Bx1 arg (=0)                                                           Magnetic field x component, this->TOP state (T)
  --KHB.Bx2 arg (=0)                                                           Magnetic field x component, this->BOTTOM state (T)
  --KHB.By1 arg (=0)                                                           Magnetic field y component, this->TOP state (T)
  --KHB.By2 arg (=0)                                                           Magnetic field y component, this->BOTTOM state (T)
  --KHB.Bz1 arg (=0)                                                           Magnetic field z component, this->TOP state (T)
  --KHB.Bz2 arg (=0)                                                           Magnetic field z component, this->BOTTOM state (T)
  --KHB.lambda arg (=0)                                                        Initial perturbation wavelength (m)
  --KHB.amp arg (=0)                                                           Initial perturbation amplitude (m)
  --KHB.offset arg (=0)                                                        Boundaries offset from 0 (m)
  --KHB.transitionWidth arg (=0)                                               Width of tanh transition for all changing values
  --Larmor.BX0 arg (=0)                                                        Background field value (T)
  --Larmor.BY0 arg (=0)                                                        Background field value (T)
  --Larmor.BZ0 arg (=3e-09)                                                    Background field value (T)
  --Larmor.VX0 arg (=0)                                                        Bulk velocity in x
  --Larmor.VY0 arg (=0)                                                        Bulk velocity in y
  --Larmor.VZ0 arg (=0)                                                        Bulk velocuty in z
  --Larmor.rho arg (=10000000)                                                 Number density (m^-3)
  --Larmor.Temperature arg (=2000000)                                          Temperature (K)
  --Larmor.maxwCutoff arg (=1e-12)                                             Cutoff for the maxwellian distribution
  --Larmor.Scale_x arg (=2000000)                                              Scale length in x (m)
  --Larmor.Scale_y arg (=2000000)                                              Scale length in y (m)
  --Magnetosphere.constBgBX arg (=0)                                           Constant flat Bx component in the whole simulation box. Default is none.
  --Magnetosphere.constBgBY arg (=0)                                           Constant flat By component in the whole simulation box. Default is none.
  --Magnetosphere.constBgBZ arg (=0)                                           Constant flat Bz component in the whole simulation box. Default is none.
  --Magnetosphere.noDipoleInSW arg (=0)                                        If set to 1, the dipole magnetic field is not set in the solar wind inflow 
                                                                               cells. Default 0.
  --Magnetosphere.dipoleScalingFactor arg (=1)                                 Scales the field strength of the magnetic dipole compared to Earths.
  --Magnetosphere.dipoleType arg (=0)                                          0: Normal 3D dipole, 1: line-dipole for 2D polar simulations, 2: line-dipole 
                                                                               with mirror, 3: 3D dipole with mirror
  --Magnetosphere.dipoleMirrorLocationX arg (=-1)                              x-coordinate of dipole Mirror
  --Magnetosphere.refine_L4radius arg (=60000000)                              Radius of L3-refined sphere or cap
  --Magnetosphere.refine_L4nosexmin arg (=55000000)                            Low x-value of nose L3-refined box
  --Magnetosphere.refine_L3radius arg (=63710000)                              Radius of L3-refined sphere or cap
  --Magnetosphere.refine_L3nosexmin arg (=50000000)                            Low x-value of nose L3-refined box
  --Magnetosphere.refine_L3tailheight arg (=10000000)                          Height in +-z of tail L3-refined box
  --Magnetosphere.refine_L3tailwidth arg (=50000000)                           Width in +-y of tail L3-refined box
  --Magnetosphere.refine_L3tailxmin arg (=-200000000)                          Low x-value of tail L3-refined box
  --Magnetosphere.refine_L3tailxmax arg (=-50000000)                           High x-value of tail L3-refined box
  --Magnetosphere.refine_L2radius arg (=95565000)                              Radius of L2-refined sphere
  --Magnetosphere.refine_L2tailthick arg (=31855000)                           Thickness of L2-refined tail region
  --Magnetosphere.refine_L1radius arg (=159275000)                             Radius of L1-refined sphere
  --Magnetosphere.refine_L1tailthick arg (=63710000)                           Thickness of L1-refined tail region
  --Magnetosphere.dipoleTiltPhi arg (=0)                                       Magnitude of dipole tilt, in degrees
  --Magnetosphere.dipoleTiltTheta arg (=0)                                     Direction of dipole tilt from Sun-Earth-line, in degrees
  --Magnetosphere.dipoleXFull arg (=95565000)                                  X-coordinate up to which dipole is at full strength, in metres
  --Magnetosphere.dipoleXZero arg (=191130000)                                 X-coordinate after which dipole is at zero strength, in metres
  --Magnetosphere.dipoleInflowBX arg (=0)                                      Inflow magnetic field Bx component to which the vector potential dipole 
                                                                               converges. Default is none.
  --Magnetosphere.dipoleInflowBY arg (=0)                                      Inflow magnetic field By component to which the vector potential dipole 
                                                                               converges. Default is none.
  --Magnetosphere.dipoleInflowBZ arg (=0)                                      Inflow magnetic field Bz component to which the vector potential dipole 
                                                                               converges. Default is none.
  --Magnetosphere.zeroOutDerivativesX arg (=1)                                 Zero Out Perpendicular components
  --Magnetosphere.zeroOutDerivativesY arg (=1)                                 Zero Out Perpendicular components
  --Magnetosphere.zeroOutDerivativesZ arg (=1)                                 Zero Out Perpendicular components
  --<population>_Magnetosphere.rho arg (=0)                                    Tail region number density (m^-3)
  --<population>_Magnetosphere.T arg (=0)                                      Temperature (K)
  --<population>_Magnetosphere.VX0 arg (=0)                                    Initial bulk velocity in x-direction
  --<population>_Magnetosphere.VY0 arg (=0)                                    Initial bulk velocity in y-direction
  --<population>_Magnetosphere.VZ0 arg (=0)                                    Initial bulk velocity in z-direction
  --<population>_Magnetosphere.taperInnerRadius arg (=0)                       Inner radius of the zone with a density tapering from the ionospheric value to 
                                                                               the background (m)
  --<population>_Magnetosphere.taperOuterRadius arg (=0)                       Outer radius of the zone with a density tapering from the ionospheric value to 
                                                                               the background (m)
  --MultiPeak.Bx arg (=0)                                                      Magnetic field x component (T)
  --MultiPeak.By arg (=0)                                                      Magnetic field y component (T)
  --MultiPeak.Bz arg (=0)                                                      Magnetic field z component (T)
  --MultiPeak.dBx arg (=0)                                                     Magnetic field x component cosine perturbation amplitude (T)
  --MultiPeak.dBy arg (=0)                                                     Magnetic field y component cosine perturbation amplitude (T)
  --MultiPeak.dBz arg (=0)                                                     Magnetic field z component cosine perturbation amplitude (T)
  --MultiPeak.magXPertAbsAmp arg (=1e-09)                                      Absolute amplitude of the random magnetic perturbation along x (T)
  --MultiPeak.magYPertAbsAmp arg (=1e-09)                                      Absolute amplitude of the random magnetic perturbation along y (T)
  --MultiPeak.magZPertAbsAmp arg (=1e-09)                                      Absolute amplitude of the random magnetic perturbation along z (T)
  --MultiPeak.lambda arg (=1)                                                  B cosine perturbation wavelength (m)
  --MultiPeak.densityModel arg (=uniform)                                      Which spatial density model is used?
  --<population>_MultiPeak.n arg (=0)                                          Number of peaks to create
  --<population>_MultiPeak.rho arg                                             Number density (m^-3)
  --<population>_MultiPeak.Tx arg                                              Temperature (K)
  --<population>_MultiPeak.Ty arg                                              Temperature
  --<population>_MultiPeak.Tz arg                                              Temperature
  --<population>_MultiPeak.Vx arg                                              Bulk velocity x component (m/s)
  --<population>_MultiPeak.Vy arg                                              Bulk velocity y component (m/s)
  --<population>_MultiPeak.Vz arg                                              Bulk velocity z component (m/s)
  --<population>_MultiPeak.rhoPertAbsAmp arg                                   Absolute amplitude of the density perturbation
  --VelocityBox.rho arg (=0)                                                   Number density in full 6 dimensions (m^-6 s^3)
  --VelocityBox.Vx1 arg (=0)                                                   Box min x (m/s)
  --VelocityBox.Vx2 arg (=0)                                                   Box max x (m/s)
  --VelocityBox.Vy1 arg (=0)                                                   Box min y (m/s)
  --VelocityBox.Vy2 arg (=0)                                                   Box max y (m/s)
  --VelocityBox.Vz1 arg (=0)                                                   Box min z (m/s)
  --VelocityBox.Vz2 arg (=0)                                                   Box max z (m/s)
  --VelocityBox.Bx arg (=0)                                                    Magnetic field x component (T)
  --VelocityBox.By arg (=0)                                                    Magnetic field y component (T)
  --VelocityBox.Bz arg (=0)                                                    Magnetic field z component (T)
  --Riemann.rho1 arg (=0)                                                      Number density, left state (m^-3)
  --Riemann.rho2 arg (=0)                                                      Number density, right state (m^-3)
  --Riemann.T1 arg (=0)                                                        Temperature, left state (K)
  --Riemann.T2 arg (=0)                                                        Temperature, right state (K)
  --Riemann.Vx1 arg (=0)                                                       Bulk velocity x component, left state (m/s)
  --Riemann.Vx2 arg (=0)                                                       Bulk velocity x component, right state (m/s)
  --Riemann.Vy1 arg (=0)                                                       Bulk velocity y component, left state (m/s)
  --Riemann.Vy2 arg (=0)                                                       Bulk velocity y component, right state (m/s)
  --Riemann.Vz1 arg (=0)                                                       Bulk velocity z component, left state (m/s)
  --Riemann.Vz2 arg (=0)                                                       Bulk velocity z component, right state (m/s)
  --Riemann.Bx1 arg (=0)                                                       Magnetic field x component, left state (T)
  --Riemann.Bx2 arg (=0)                                                       Magnetic field x component, right state (T)
  --Riemann.By1 arg (=0)                                                       Magnetic field y component, left state (T)
  --Riemann.By2 arg (=0)                                                       Magnetic field y component, right state (T)
  --Riemann.Bz1 arg (=0)                                                       Magnetic field z component, left state (T)
  --Riemann.Bz2 arg (=0)                                                       Magnetic field z component, right state (T)
  --Shock.BX0 arg (=1e-09)                                                     Background field value (T)
  --Shock.BY0 arg (=2e-09)                                                     Background field value (T)
  --Shock.BZ0 arg (=3e-09)                                                     Background field value (T)
  --Shock.EX0 arg (=0)                                                         Background electric field
  --Shock.VX0 arg (=0)                                                         Bulk velocity in x
  --Shock.VY0 arg (=0)                                                         Bulk velocity in y
  --Shock.VZ0 arg (=0)                                                         Bulk velocuty in z
  --Shock.rho arg (=10000000)                                                  Number density (m^-3)
  --Shock.Temperature arg (=2000000)                                           Temperature (K)
  --Shock.magPertAmp arg (=1e-09)                                              Amplitude of the magnetic perturbation
  --Shock.densityPertAmp arg (=0.1)                                            Amplitude factor of the density perturbation
  --Shock.velocityPertAmp arg (=1000000)                                       Amplitude of the velocity perturbation
  --Shock.maxwCutoff arg (=1e-12)                                              Cutoff for the maxwellian distribution
  --Shock.Scale_x arg (=2000000)                                               Scale length in x (m)
  --Shock.Scale_y arg (=2000000)                                               Scale length in y (m)
  --Shock.Sharp_Y arg (=0.1)                                                   Sharpness of tannh
  --IPShock.BX0u arg (=1e-09)                                                  Upstream mag. field value (T)
  --IPShock.BY0u arg (=2e-09)                                                  Upstream mag. field value (T)
  --IPShock.BZ0u arg (=3e-09)                                                  Upstream mag. field value (T)
  --IPShock.BX0d arg (=1e-09)                                                  Downstream mag. field value (T)
  --IPShock.BY0d arg (=2e-09)                                                  Downstream mag. field value (T)
  --IPShock.BZ0d arg (=3e-09)                                                  Downstream mag. field value (T)
  --IPShock.Width arg (=50000)                                                 Shock Width (m)
  --IPShock.AMR_L1width arg (=0)                                               L1 AMR region width (m)
  --IPShock.AMR_L2width arg (=0)                                               L2 AMR region width (m)
  --IPShock.AMR_L3width arg (=0)                                               L3 AMR region width (m)
  --IPShock.AMR_L4width arg (=0)                                               L4 AMR region width (m)
  --<population>_IPShock.VX0u arg (=0)                                         Upstream Bulk velocity in x
  --<population>_IPShock.VY0u arg (=0)                                         Upstream Bulk velocity in y
  --<population>_IPShock.VZ0u arg (=0)                                         Upstream Bulk velocuty in z
  --<population>_IPShock.rhou arg (=10000000)                                  Upstream Number density (m^-3)
  --<population>_IPShock.Temperatureu arg (=2000000)                           Upstream Temperature (K)
  --<population>_IPShock.VX0d arg (=0)                                         Downstream Bulk velocity in x
  --<population>_IPShock.VY0d arg (=0)                                         Downstream Bulk velocity in y
  --<population>_IPShock.VZ0d arg (=0)                                         Downstream Bulk velocuty in z
  --<population>_IPShock.rhod arg (=10000000)                                  Downstream Number density (m^-3)
  --<population>_IPShock.Temperatured arg (=2000000)                           Downstream Temperature (K)
  --<population>_IPShock.maxwCutoff arg (=1e-12)                               Cutoff for the maxwellian distribution
  --Template.param arg (=0)                                                    This is my project's parameter. Default is 0.0
  --test_fp.V0 arg (=1000000)                                                  Velocity magnitude (m/s)
  --test_fp.B0 arg (=1e-09)                                                    Magnetic field value in the non-zero patch (T)
  --test_fp.rho arg (=10000000)                                                Number density (m^-3)
  --test_fp.Temperature arg (=1e-06)                                           Temperature (K)
  --test_fp.angle arg (=0)                                                     Orientation of the propagation expressed in pi/4
  --test_fp.Bdirection arg (=0)                                                Direction of the magnetic field (0:x, 1:y, 2:z, 3:all)
  --test_fp.shear arg (=1)                                                     Add a shear (if false, V=0.5 everywhere).
  --TestHall.BX0 arg (=1e-09)                                                  Magnetic field x (T)
  --TestHall.BY0 arg (=1e-09)                                                  Magnetic field y (T)
  --TestHall.BZ0 arg (=1e-09)                                                  Magnetic field z (T)
  --TestHall.VX0 arg (=-1000)                                                  velocity x (m/s)
  --TestHall.VY0 arg (=1000)                                                   velocity y (m/s)
  --TestHall.VZ0 arg (=1000)                                                   velocity z (m/s)
  --TestHall.Temperature arg (=1000000)                                        Temperature (K)
  --TestHall.rho arg (=1000000)                                                Number density (m^-3)
  --test_trans.cellPosition arg (=1.5)                                         Position of the centre of the cells initiated (same used in velocity and space).
  --test_trans.peakValue arg (=1)                                              Value of the distribution function
  --VerificationLarmor.BX0 arg (=0)                                            Background field value (T)
  --VerificationLarmor.BY0 arg (=0)                                            Background field value (T)
  --VerificationLarmor.BZ0 arg (=0)                                            Background field value (T)
  --VerificationLarmor.VX0 arg (=0)                                            Bulk velocity in x
  --VerificationLarmor.VY0 arg (=0)                                            Bulk velocity in y
  --VerificationLarmor.VZ0 arg (=0)                                            Bulk velocity in z
  --VerificationLarmor.X0 arg (=0)                                             Initial Position
  --VerificationLarmor.Y0 arg (=0)                                             Initial Position
  --VerificationLarmor.Z0 arg (=0)                                             Initial Position
  --VerificationLarmor.rho arg (=10000000)                                     Number density (m^-3)
  --Shocktest.rho1 arg (=0)                                                    Number density, left state (m^-3)
  --Shocktest.rho2 arg (=0)                                                    Number density, right state (m^-3)
  --Shocktest.T1 arg (=0)                                                      Temperature, left state (K)
  --Shocktest.T2 arg (=0)                                                      Temperature, right state (K)
  --Shocktest.Vx1 arg (=0)                                                     Bulk velocity x component, left state (m/s)
  --Shocktest.Vx2 arg (=0)                                                     Bulk velocity x component, right state (m/s)
  --Shocktest.Vy1 arg (=0)                                                     Bulk velocity y component, left state (m/s)
  --Shocktest.Vy2 arg (=0)                                                     Bulk velocity y component, right state (m/s)
  --Shocktest.Vz1 arg (=0)                                                     Bulk velocity z component, left state (m/s)
  --Shocktest.Vz2 arg (=0)                                                     Bulk velocity z component, right state (m/s)
  --Shocktest.Bx1 arg (=0)                                                     Magnetic field x component, left state (T)
  --Shocktest.Bx2 arg (=0)                                                     Magnetic field x component, right state (T)
  --Shocktest.By1 arg (=0)                                                     Magnetic field y component, left state (T)
  --Shocktest.By2 arg (=0)                                                     Magnetic field y component, right state (T)
  --Shocktest.Bz1 arg (=0)                                                     Magnetic field z component, left state (T)
  --Shocktest.Bz2 arg (=0)                                                     Magnetic field z component, right state (T)
  --Project_common.seed arg (=42)                                              Seed for the RNG

