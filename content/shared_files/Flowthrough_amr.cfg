# The root options describe toplevel solver properties and populations
ParticlePopulations = proton

project = Flowthrough
propagate_field = 1
propagate_vlasov_acceleration = 1
propagate_vlasov_translation = 1
dynamic_timestep = 1

# <population>_properties, multiple populations are supported!
[proton_properties]
mass = 1
mass_units = PROTON
charge = 1

# Adaptive Mesh Refinement - new development!
[AMR]
max_spatial_level = 2             # Maximum number of refinements
max_allowed_spatial_level = 2     # *Currently* allowed number of refinements
                                # - can be increased after restarts, gradually!
adapt_refinement = 1

# tuning parameters
use_alpha1 = 1
alpha1_coarsen_threshold = 0.1
alpha1_refine_threshold = 0.4
use_alpha2 = 1
alpha2_refine_threshold = 1

# Cadence and safeties
refine_on_restart = 0
refine_cadence = 4            # refinement cadence is in units of load balances
refine_after = 50.0           # First adapt after 50s from start of run
refine_radius = 7320e6        # We do not want to refine outer boundary cells

# Spatial grid parameters - coarsest level grid.
[gridbuilder]
x_length = 48
y_length = 12
z_length = 12
x_min = -16e7
x_max = 16e7
y_min = -4e7
y_max = 4e7
z_min = -4e7
z_max = 4e7
t_max = 400.0
dt = 2.0

# <population>_vspace - velocity grid definitions per population
[proton_vspace]
vx_min = -1.92e6
vx_max = +1.92e6
vy_min = -1.92e6
vy_max = +1.92e6
vz_min = -1.92e6
vz_max = +1.92e6
# vi_length are in units of block width (4, so far)
# - these define 64x64x64 velocity-space cells over +-1.92e6 m/s.
# -> dv = 61.250 km/s for this case
vx_length = 16
vy_length = 16
vz_length = 16

[io]
diagnostic_write_interval = 1
write_initial_state = 0

# Reduced data writeouts
system_write_t_interval = 10.0
system_write_file_name = bulk

# These set up strides for saving VDF data in the reduced data readouts
system_write_distribution_stride = 0
system_write_distribution_xline_stride = 0
system_write_distribution_yline_stride = 0
system_write_distribution_zline_stride = 0

# Reduced data outputs
[variables]
output = populations_vg_rho
output = populations_vg_v
output = populations_vg_ptensor
output = fg_e
output = fg_b
output = vg_boundarytype
output = vg_boundarylayer
output = vg_rank
output = vg_b_vol_derivatives
output = vg_amr_alpha
output = vg_amr_jperb
output = vg_loadbalance_weight
output = populations_vg_blocks
diagnostic = populations_vg_blocks

# Declare boundary conditions
[boundaries]
periodic_x = no
periodic_y = yes
periodic_z = yes
boundary = Outflow
boundary = Maxwellian

[outflow]
precedence = 3

# NB population-specific boundary conditions!
[proton_outflow]
face = x+
#face = y-
#face = y+
#face = z-
#face = z+

[maxwellian]
precedence = 4
face = x-

[proton_maxwellian]
dynamic = 0
# select the sw1.dat file for inflow Maxwellian parameters
file_x- = sw1.dat

[proton_sparse]
minValue = 1.0e-15


# Project settings
[Flowthrough]
Bx = 1.0e-9
By = 1.0e-9
Bz = 1.0e-9

# Population-specific project settings - initial condition
[proton_Flowthrough]
T = 1.0e5
rho  = 1.0e6
VX0 = 1e5
VY0 = 0
VZ0 = 0

[loadBalance]
# algorithm = RIB
algorithm = RCB
optionKey = RCB_RECTILINEAR_BLOCKS # Recommended to use with RCB
optionValue = 1
rebalanceInterval = 5 # in timesteps

# Safety bailouts (stores restart for potential recovery)
[bailout]
velocity_space_wall_block_margin = 0

